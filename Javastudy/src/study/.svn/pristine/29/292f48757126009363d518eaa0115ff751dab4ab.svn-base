/**
 * agw-ne
 *
 * Copyright ¨Ï 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2018-04-15
 * @ file Agw4pDAOImpl.java
 * @ version 1.0
 * @ see
 * @ Copyright ¨Ï 2018 By kt corp. All rights reserved.
 */

package kr.co.kt.agwne.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Repository;

import kr.co.kt.agwne.dao.BusinessDAO;
import kr.co.kt.agwne.dto.BusinessVO;
import kr.co.kt.agwne.dto.CodeVO;
import kr.co.kt.agwne.dto.ConstructMemVO;
import kr.co.kt.agwne.dto.ConstructVO;
import kr.co.kt.agwne.dto.FacilitiesVO;
import kr.co.kt.agwne.dto.ModelVO;

@Repository("agw4pDao")
public class Agw4pDAOImpl implements BusinessDAO {

    @Inject
    private SqlSession sqlSession;
    
    private static final String Namespace = "kr.co.kt.agwne.agw4pMapper";


    
    @Override
    public List<CodeVO> t_bs_code(HashMap<String, Object> listCodeInfo) throws Exception{
        return sqlSession.selectList(Namespace + ".t_bs_code", listCodeInfo);    
    }
    
    @Override
    public List<ModelVO> t_bs_model(HashMap<String, Object> listModelInfo) throws Exception{
        return sqlSession.selectList(Namespace + ".t_bs_model", listModelInfo);    
    }
    
    @Override 
    public int t_bs_reg(BusinessVO bsVO) throws Exception{
    	sqlSession.insert(Namespace + ".t_bs_reg", bsVO);
    	sqlSession.update(Namespace + ".t_bs_reg_doc", bsVO);
    	return bsVO.getNeoss_no();
    }
    
    @Override 
    public Object t_bs_modify(BusinessVO bsVO) throws Exception{
    	return sqlSession.update(Namespace + ".t_bs_modify", bsVO);
    }
    
    @Override 
    public Object t_bs_reg_history(BusinessVO bsVO) throws Exception{
    	return sqlSession.insert(Namespace + ".t_bs_reg_history", bsVO);
    }
     
    @Override
    public List<BusinessVO> t_bs_list(HashMap<String, Object> listInfo) throws Exception{
        return sqlSession.selectList(Namespace + ".t_bs_list", listInfo);    
    }
    @Override
    public List<BusinessVO> t_bs_list_excel(HashMap<String, Object> listInfo) throws Exception{
        return sqlSession.selectList(Namespace + ".t_bs_list_excel", listInfo);    
    }
    @Override
    public int t_bs_listCnt(HashMap<String, Object> listInfo)  throws Exception{
        return sqlSession.selectOne(Namespace + ".t_bs_listCnt", listInfo);
    }

    @Override
    public Object t_bs_list_view(int rstNo)  throws Exception{
        return sqlSession.selectOne(Namespace + ".t_bs_list_view", rstNo);
    }
    
    @Override
    public List<BusinessVO> t_bs_list_view_hist(int rstNo)  throws Exception{
        return sqlSession.selectList(Namespace + ".t_bs_list_view_hist", rstNo);
    }
    
    @Override
    public Object t_bs_list_view_hist2(int history_no)  throws Exception{
        return sqlSession.selectOne(Namespace + ".t_bs_list_view_hist2", history_no);
    }
    
    @Override
    public HashMap<String, Object> t_bs_list_view_hist3(HashMap<String, Integer> paramInfo)  throws Exception{
        return sqlSession.selectOne(Namespace + ".t_bs_list_view_hist3", paramInfo);
    }
    
    @Override
    public Object t_bs_update(BusinessVO bsVO)  throws Exception{
        return sqlSession.update(Namespace + ".t_bs_list_update", bsVO);
    }
    
    @Override
    public HashMap<String, Integer> request_period_chk()  throws Exception{
        return sqlSession.selectOne(Namespace + ".request_period_chk");
    } 

    @Override
    public int t_construct_reg(ConstructVO csVO, Map<String, Object> paramMap)  throws Exception{
		int count=0;
		count+=sqlSession.insert(Namespace + ".t_construct_reg", csVO);
		paramMap.put("const_no", csVO.getConst_no());
		count+=sqlSession.insert(Namespace + ".t_construct_mem_reg", paramMap);

//		if(count < 4) {
//			throw new Exception();
//		}
        return count;
    }
    
    @Override
    public int t_construct_modi(ConstructVO csVO, Map<String, Object> paramMap)  throws Exception{
		int count=0;
		count+=sqlSession.update(Namespace + ".t_const_modi", csVO);
        return count;
    }
    @Override
    public int t_construct_modi_ed(ConstructVO csVO)  throws Exception{
		int count=0;
			count+=sqlSession.update(Namespace + ".t_const_modi", csVO);
			count+=sqlSession.update(Namespace+".t_const_modi_expense",csVO );
        return count;
    }
    @Override
    public int t_bs_del(int neoss_no)  throws Exception{
    	int count = 0;
    	count =+sqlSession.update(Namespace + ".t_bs_del", neoss_no);
    	//count =+sqlSession.update(Namespace + ".t_bs_del_ps", neoss_no);

        return count;
    }
    @Override
    public ConstructVO t_construct_view(int rstNo)  throws Exception{
        return sqlSession.selectOne(Namespace + ".t_const_view", rstNo);
    }
/*    @Override
    public List<HashMap<String, String>> t_construct_mem(int const_no)  throws Exception{
        return sqlSession.selectList(Namespace + ".t_const_mem_view", const_no);
    } */
    @Override
    public List<ConstructMemVO> t_construct_mem(int const_no)  throws Exception{
        return sqlSession.selectList(Namespace + ".t_const_mem_view", const_no);
    } 
    
    @Override
    public int request_prev_no(int rstNo) {
        int no = 0;
        try {
            no = sqlSession.selectOne(Namespace + ".request_prev_no", rstNo);
        } catch (Exception e) {
            no = 0;
        }
        return no;
    }
    
    @Override
    public int request_next_no(int rstNo) {
        int no = 0;
        try {
            no = sqlSession.selectOne(Namespace + ".request_next_no", rstNo);
        } catch (Exception e) {
            no = 0;
        }
        return no;
    }

	@Override
	public int t_construct_stat_change(Map<String, Object> paramMap) throws Exception {
		return sqlSession.update(Namespace+".t_construct_stat_change",paramMap );
	}

	@Override
	public List<HashMap<String, Object>> t_bs_pots(String no_emp) throws Exception {
		return sqlSession.selectList(Namespace+".t_bs_code_pots", no_emp);
	}

	@Override
	public int t_bs_reg_confirm(HashMap<String, Object> cfVO) throws Exception {
		return sqlSession.insert(Namespace + ".t_bs_reg_confirm", cfVO);
	}
	
	@Override
	public int t_bs_modi_confirm(HashMap<String, Object> cfVO) throws Exception {
		int cnt = 0;
		cnt += sqlSession.update(Namespace +".update_confirm", cfVO);
		cnt += sqlSession.insert(Namespace +".insert_confirm", cfVO);
		cnt += sqlSession.delete(Namespace +".delete_confirm_temp", cfVO);
		return cnt;
	}


	@Override
	public List<HashMap<String, Object>> t_bs_ipsec() throws Exception {
		return sqlSession.selectList(Namespace+".t_bs_code_ipsec");
	}

	@Override
	public List<HashMap<String, Object>> t_bs_emsIp() throws Exception {
		return sqlSession.selectList(Namespace+".t_bs_code_emsIp");
	}
	
	public FacilitiesVO selectFacilities(HashMap<String, Object> map) {
		return sqlSession.selectOne(Namespace +".selectFacilities", map);
	}

    
}
