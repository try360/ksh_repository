<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kt.agwne.userInfoMapper">

    <select id="userInfo_totalCnt" parameterType="userInfoVO" resultType="int">
    /* userInfoMapper.userInfo_totalCnt */
        select count(*) totalRecordCount
        from agwne.t_org_user usr left outer join (select user_no, role from agwne.t_user_role where use_yn = 'Y' group by user_no, role) rol 
 				on usr.user_no = rol.user_no,
 			agwne.t_bonbu_level bon
 		where usr.dept_code = bon.orgscode
        <if test="searchTxt != null and searchTxt != ''">
        <choose>
        	<when test="searchType == 'bonbu_name'">
	        <![CDATA[ 
		       and usr.bonbu in (select org.orgscode from agwne.t_bonbu_level org where org.orgname like '%${searchTxt}%')
		    ]]>
	    	</when>
	    	<when test="searchType == 'dept_name'">
	        <![CDATA[ 
		       and usr.dept_code in (select org.orgscode from agwne.t_bonbu_level org where org.orgname like '%${searchTxt}%')
		    ]]>
	    	</when>
	    	<otherwise>
		    <![CDATA[ 
		       and ${searchType} like '%${searchTxt}%'
		    ]]>
	    	</otherwise>
	    </choose>
	    </if>
    </select>
 
    <select id="userInfo_list" parameterType="userInfoVO" resultType="userInfoVO">
 	/* userInfoMapper.userInfo_list */
 		select
 			usr.no_emp,                
      		usr.emp_name,              
      		usr.no_emp passwd,         
      		usr.status,                
      		usr.jikwi_cd,              
      		usr.jikwi,                 
      		usr.ex_title_cd,           
      		usr.ex_title_nm,           
      		usr.dept_code,             
      		usr.dept_name,    
      		usr.ex_bonbu_cd,           
      		usr.ex_bonbu_nm,           
      		usr.ex_agency_cd,          
      		usr.ex_agency_nm,          
      		usr.ex_company_cd,         
      		usr.ex_company_nm,         
      		usr.email_address,         
      		usr.phone_number,          
      		usr.no_kt_emp,             
      		usr.ex_biz_owner_no,       
      		usr.ex_biz_company_nm,     
      		usr.batch_flag,            
      		usr.batch_date,            
      		usr.bonbu,
      		(select o.orgname from agwne.t_bonbu_level o where o.orgscode = usr.bonbu) bonbu_name,               
      		usr.porgscode,             
      		usr.hierarchy,             
      		usr.org,                   
      		usr.staff,
            rol.role
 		from agwne.t_org_user usr left outer join (select user_no, role from agwne.t_user_role where use_yn = 'Y' group by user_no, role) rol 
 				on usr.user_no = rol.user_no,
 			agwne.t_bonbu_level bon
 		where usr.dept_code = bon.orgscode
        <if test="searchTxt != null and searchTxt != ''">
        <choose>
        	<when test="searchType == 'bonbu_name'">
	        <![CDATA[ 
		       and usr.bonbu in (select org.orgscode from agwne.t_bonbu_level org where org.orgname like '%${searchTxt}%')
		    ]]>
	    	</when>
	    	<when test="searchType == 'dept_name'">
	        <![CDATA[ 
		       and usr.dept_code in (select org.orgscode from agwne.t_bonbu_level org where org.orgname like '%${searchTxt}%')
		    ]]>
	    	</when>
	    	<otherwise>
		    <![CDATA[ 
		       and ${searchType} like '%${searchTxt}%'
		    ]]>
	    	</otherwise>
	    </choose>
	    </if>
 	    limit ${recordsPerPage} offset ${startRecord} 		

    </select>    
    
 	<select id="userInfo_one" parameterType="userInfoVO" resultType="userInfoVO">
 	/* userInfoMapper.userInfo_one */
		select
			usr.user_no,
      		usr.no_emp,                
      		usr.no_emp as user_id,
      		usr.emp_name,              
      		usr.no_emp as passwd,         
      		usr.status,                
      		usr.jikwi_cd,              
      		usr.jikwi,                 
      		usr.ex_title_cd,           
      		usr.ex_title_nm,           
      		usr.dept_code,             
      		(select org.orgname from agwne.t_bonbu_level org where org.orgscode = usr.dept_code) as dept_name,    
      		usr.porgscode org_code,              
      		(select org.orgname from agwne.t_bonbu_level org where org.orgscode = usr.porgscode) as org_name,              
      		usr.ex_bonbu_cd,           
      		usr.ex_bonbu_nm,           
      		usr.ex_agency_cd,          
      		usr.ex_agency_nm,          
      		usr.ex_company_cd,         
      		usr.ex_company_nm,         
      		usr.email_address,         
      		usr.phone_number,          
      		usr.no_kt_emp,             
      		usr.ex_biz_owner_no,       
      		usr.ex_biz_company_nm,     
      		usr.batch_flag,            
      		usr.batch_date,            
      		usr.bonbu,
      		(select org.orgname from agwne.t_bonbu_level org where org.orgscode = usr.bonbu) as bonbu_name,                 
      		usr.porgscode,             
      		usr.hierarchy,   
      		usr.office_nm,             
      		usr.org,                   
      		usr.staff,
	        map.region_name,
	        map.region,
	        (select r.role from agwne.t_user_role r where r.user_no = usr.user_no limit 1) as role
 		from agwne.t_org_user usr
 		     LEFT OUTER JOIN agwne.t_org_mapping as map on (usr.bonbu = map.bonbu and map.use_yn = 'Y')
 		where usr.no_emp = '${no_emp}'
   </select>

 	<select id="login_one" parameterType="userInfoVO" resultType="userInfoVO">
 	/* userInfoMapper.login_one */
		select
      		usr.no_emp,                
      		usr.no_emp as user_id,
      		usr.emp_name,              
      		usr.no_emp as passwd,         
      		usr.status,                
      		usr.dept_code,             
      		(select org.orgname from agwne.t_bonbu_level org where org.orgscode = usr.dept_code) as dept_name,    
      		usr.ex_agency_cd,          
      		usr.ex_agency_nm,          
      		usr.email_address,         
      		usr.phone_number,          
      		usr.no_kt_emp,             
      		usr.ex_biz_owner_no,       
      		usr.ex_biz_company_nm,     
      		usr.batch_flag,            
      		usr.batch_date
 		from agwne.t_org_user_admin usr
 		where usr.no_emp = '${no_emp}'
 		and usr.passwd = '${passwd}'
   </select>
    
    <insert id="userInfo_reg" parameterType="userInfoVO"> 
    /* userInfoMapper.userInfo_reg */
	<![CDATA[ 
		insert into agwne.t_org_user_admin (
	         no_emp
 			,emp_name
	        ,passwd 
	        ,status
 			,org_code
 			,org_name
 			,dept_code
 			,dept_name
 			,ex_agency_cd
 			,ex_agency_nm
 			,no_kt_emp
 			,phone_number
 			,email_address
 			,ex_biz_owner_no
 			,ex_biz_company_nm
 			,batch_flag
 			,batch_date
 			,reg_id
 			,reg_date
 			,upt_id
 			,upt_date
		)values( 
	         #{no_emp}
 			,#{emp_name}
	        ,#{passwd} 
	        ,#{status} 
 			,#{org_code}
 			,#{org_name}
 			,#{dept_code}
 			,#{dept_name}
 			,#{ex_agency_cd}
 			,#{ex_agency_nm}
 			,#{no_kt_emp}
 			,#{phone_number}
 			,#{email_address}
 			,#{ex_biz_owner_no}
 			,#{ex_biz_company_nm}
 			,#{batch_flag}
 			,#{batch_date}
 			,#{no_emp}
 			,localtimestamp
 			,#{no_emp}
 			,localtimestamp
		)
	]]>
	</insert>

    <update id="userInfo_update" parameterType="userInfoVO"> 
    /* userInfoMapper.userInfo_update */
	<![CDATA[ 
		update agwne.t_org_user_admin set 
 			 emp_name		= #{emp_name}
 			,passwd			= #{passwd}
 			,status			= #{status}
 			,dept_code		= #{dept_code}
 			,dept_name		= #{dept_name}
 			,org_code		= #{org_code}
 			,org_name		= #{org_name} 			
 			,ex_agency_cd	= #{ex_agency_cd}
 			,ex_agency_nm	= #{ex_agency_nm} 			
 			,no_kt_emp		= #{no_kt_emp}
 			,phone_number	= #{phone_number}
 			,email_address	= #{email_address} 			
 			,ex_biz_owner_no = #{ex_biz_owner_no}
 			,ex_biz_company_nm = #{ex_biz_company_nm} 			
 			,upt_id			= #{no_emp} 			
 			,upt_date		= localtimestamp
		where no_emp = #{no_emp}
	]]>
	</update>       
    
     <update id="org_user_update" parameterType="userInfoVO"> 
    /* userInfoMapper.org_user_update */
	<![CDATA[ 
	    update agwne.t_org_user set 
	 			 bonbu		= #{bonbu}
	 			,bonbu_name	= #{bonbu_name}
	    where no_emp = #{no_emp}
    ]]>
	</update>	
	    
    <delete id="userInfo_deleteOne" parameterType="userInfoVO">
    /* userInfoMapper.userInfo_deleteOne */
    <![CDATA[ 
    	delete from agwne.t_org_user_admin
    	where no_emp = #{no_emp}
    ]]>
    </delete>
  
  	<select id="orgDept_list" parameterType="String" resultType="orgVO">
 	/* userInfoMapper.orgDept_list */
 		select
 			orgscode,
 			orgname,
 			orgclscode,
 			porgscode
 		from agwne.tb_org
 	    where porgscode = '${value}'
    </select>
    
    <select id="orgDepth" parameterType="String" resultType="orgVO">
 	/* userInfoMapper.orgDepth */
 		select
 			orgscode,
 			orgname,
 			orgclscode,
 			porgscode
 		from agwne.tb_org
        where orgscode = '${value}'
    </select>
  
    <insert id="loginHist" parameterType="userInfoVO"> 
    /* userRoleMapper.loginHist */
	<![CDATA[ 
		insert into agwne.t_login_hist (user_id, state, ip, date)
		values(#{no_emp}, 'login', #{ip}, localtimestamp)
	]]>
	</insert> 
	
	<insert id="logoutHist" parameterType="userInfoVO"> 
    /* userRoleMapper.logoutHist */
	<![CDATA[ 
		insert into agwne.t_login_hist (user_id, state, ip, date)
		values(#{user_id}, 'logout', #{ip}, localtimestamp)
	]]>
	</insert> 
    
	<update id="updatePwdErrorCnt" parameterType="String">
	<![CDATA[
		update agwne.t_org_user set
		       error_cnt = error_cnt + 1
		 where no_emp = #{no_emp}
	]]>
	</update>
	
	<select id="select_error_cnt" parameterType="String" resultType="int">
	<![CDATA[
		select error_cnt
		  from agwne.t_org_user
		 where no_emp = #{no_emp}
	]]>
	</select>
	
	<update id="updatePwdErrorCntReset" parameterType="String">
	<![CDATA[
		update agwne.t_org_user set
		       error_cnt = 0
		 where no_emp = #{no_emp}
	]]>
	</update>
	<update id="updateTmPw" parameterType="userInfoVO">
	 /* userRoleMapper.updateTmPw */
	<![CDATA[
		update public.tbl_ems_user_policy set
		       access_cd = #{passwd}
		 where user_id = #{user_id}
	]]>
	</update>
		<insert id="insertTmInfo" parameterType="userInfoVO"> 
    /* userRoleMapper.insertTmInfo */
	<![CDATA[ 
		INSERT INTO public.tbl_ems_user_policy (
			user_id, 
			get_sys, 
			get_cfg,
			set_cfg, 
			get_mod, 
			set_cmd, 
			get_ha, 
			write_id, 
			save_dt
			) VALUES(#{no_emp}, '1', '1','1','1','0','1', #{user_id}, now()) 
				ON CONFLICT(user_id) DO UPDATE SET 
			save_dt = now()	
	]]>
	</insert> 
</mapper>