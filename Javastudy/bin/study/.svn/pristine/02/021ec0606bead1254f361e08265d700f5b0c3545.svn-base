/**
 * agw-ne
 *
 * Copyright ⓒ 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2018-04-15
 * @ file ExcelRead.java
 * @ version 1.0
 * @ see
 * @ Copyright ⓒ 2018 By kt corp. All rights reserved.
 */

package kr.co.kt.common.excel;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

public class ExcelRead {

	public static List<Map<String, String>> read(ExcelReadOption excelReadOption) {
		Workbook wb = ExcelFileType.getWorkbook(excelReadOption.getFilePath());
		
		Sheet sheet = wb.getSheetAt(0);
		
		System.out.println("Sheet 이름:"+ wb.getSheetName(0));
		System.out.println("데이터가 있는 Sheet의 수 : "+ wb.getNumberOfSheets());
		
		int numOfRows = sheet.getPhysicalNumberOfRows();
		int numOfCells = 0;
		
		Row row = null;
		Cell cell = null;
		
		String cellName = "";
		Map<String, String> map = null;
		List<Map<String, String>> result = new ArrayList<Map<String, String>>();
		
		for (int rowIndex = excelReadOption.getStartRow() -1; rowIndex < numOfRows; rowIndex++) {
			row = sheet.getRow(rowIndex);
			if (row != null) {
				numOfCells = row.getLastCellNum();
				map = new HashMap<String, String>();
				for (int cellIndex = 0; cellIndex < numOfCells; cellIndex++) {
					cell = row.getCell(cellIndex);
					cellName = ExcelCellRef.getName(cell, cellIndex);
					if(!excelReadOption.getOutputColumns().contains(cellName)) {
						continue;
					}
					map.put(cellName, ExcelCellRef.getValue(cell));
				}
				result.add(map);
			}
		}
		
		return result;
	}
}
