/**
 * agw-ne
 *
 * Copyright ¨Ï 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2018-04-15
 * @ file ModelDAOImpl.java
 * @ version 1.0
 * @ see
 * @ Copyright ¨Ï 2018 By kt corp. All rights reserved.
 */

package kr.co.kt.agwne.dao.impl;

import java.util.HashMap;
import java.util.List;

import javax.inject.Inject;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Repository;

import kr.co.kt.agwne.dao.ModelDAO;
import kr.co.kt.agwne.dto.ModelVO;
 

@Repository
public class ModelDAOImpl implements ModelDAO {

    @Inject
    private SqlSession sqlSession;

    private static final String Namespace = "kr.co.kt.agwne.modelMapper";

    @Override
    public Object model_reg(ModelVO modelVO) throws Exception{
        return sqlSession.insert(Namespace + ".model_reg", modelVO);  
    }

    @Override
    public Object model_update(ModelVO modelVO) throws Exception {
        return sqlSession.insert(Namespace + ".model_update", modelVO);  
    }
    
   @Override
    public List<ModelVO> model_list(HashMap<String, Object> listInfo) throws Exception{
        return sqlSession.selectList(Namespace + ".model_list",listInfo);    
    }
    
   @Override
   public Object model_del(int model_no) throws Exception{
       return sqlSession.update(Namespace + ".model_del", model_no);  
   }
   
   @Override
   public Object model_check(ModelVO modelVO) throws Exception {
       return sqlSession.selectOne(Namespace + ".model_check", modelVO);  
   }

	@Override
	public int modelArray(ModelVO vo) {
		return sqlSession.update(Namespace +".modelArray", vo);
	}
   
}
