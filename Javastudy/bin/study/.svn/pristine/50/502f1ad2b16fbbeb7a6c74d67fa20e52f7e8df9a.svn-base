/**
 * agw-ne
 *
 * Copyright ¨Ï 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2018-04-15
 * @ file UserInfoDAOImpl.java
 * @ version 1.0
 * @ see
 * @ Copyright ¨Ï 2018 By kt corp. All rights reserved.
 */

package kr.co.kt.agwne.dao.impl;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import kr.co.kt.agwne.dao.UserInfoDAO;
import kr.co.kt.agwne.dto.OrgVO;
import kr.co.kt.agwne.dto.UserInfoVO;


@Repository
public class UserInfoDAOImpl implements UserInfoDAO {
	@Autowired
	private SqlSession sqlSession;

    private static final String Namespace = "kr.co.kt.agwne.userInfoMapper";

    @Override
    public int userInfo_totalCnt(UserInfoVO userInfoVO) throws Exception{
        return sqlSession.selectOne(Namespace + ".userInfo_totalCnt", userInfoVO);
    }
    
	@Override
    public List<UserInfoVO> userInfo_list(UserInfoVO userInfoVO) throws Exception{
        return sqlSession.selectList(Namespace + ".userInfo_list", userInfoVO);    
    }
	
	@Override
    public UserInfoVO userInfo_one(UserInfoVO userInfoVO){
		return (UserInfoVO)sqlSession.selectOne(Namespace + ".userInfo_one", userInfoVO);
    }
	
	@Override
    public UserInfoVO login_one(UserInfoVO userInfoVO){
		return sqlSession.selectOne(Namespace + ".login_one", userInfoVO);
    }
	
	@Override
    public int userInfo_reg(UserInfoVO userInfoVO) throws Exception{
		return sqlSession.insert(Namespace + ".userInfo_reg", userInfoVO);
    }
		
	@Override
    public int userInfo_update(UserInfoVO userInfoVO) throws Exception{
		sqlSession.update(Namespace + ".org_user_update", userInfoVO);
		return sqlSession.update(Namespace + ".userInfo_update", userInfoVO);		
    }
	
	@Override
    public int userInfo_deleteOne(UserInfoVO userInfoVO) throws Exception{
        return sqlSession.delete(Namespace + ".userInfo_deleteOne", userInfoVO);  
    }	

	@Override
	public List<OrgVO> listOrgDept(String orgscode) throws Exception{		
		return sqlSession.selectList(Namespace + ".orgDept_list", orgscode);
	}
	
	@Override
	public OrgVO orgDepth(String orgscode) throws Exception{
		return sqlSession.selectOne(Namespace + ".orgDepth", orgscode);
	}
	
	
	@Override
	public void loginHist(UserInfoVO userInfoVO) throws Exception{
		sqlSession.selectOne(Namespace + ".loginHist", userInfoVO);
	}
	
	@Override
	public void logoutHist(UserInfoVO userInfoVO) throws Exception{
		sqlSession.selectOne(Namespace + ".logoutHist", userInfoVO);
	}

	@Override
	public int select_error_cnt(String loginID) {
		int result = 0;
		String error_cnt;
		try {
			error_cnt = sqlSession.selectOne(Namespace +".select_error_cnt", loginID) + "";
			if (error_cnt.equals("") || error_cnt == null) {
				result = -1;
			} else {
				result = Integer.parseInt(error_cnt);
			}
		} catch (ClassCastException e) {
			result = sqlSession.selectOne(Namespace +".select_error_cnt", loginID);
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public void updatePwdErrorCnt(String loginID) {
		sqlSession.update(Namespace +".updatePwdErrorCnt", loginID);
	}

	@Override
	public void updatePwdErrorCntReset(String loginID) {
		sqlSession.update(Namespace +".updatePwdErrorCntReset", loginID);
	}

	@Override
	public void updateTmPw(UserInfoVO userInfoVO) throws Exception {
		sqlSession.update(Namespace +".updateTmPw", userInfoVO);		
	}

	@Override
	public void insertTmInfo(UserInfoVO userInfoVO) throws Exception {
		sqlSession.insert(Namespace +".insertTmInfo", userInfoVO);		
		
	}
}
