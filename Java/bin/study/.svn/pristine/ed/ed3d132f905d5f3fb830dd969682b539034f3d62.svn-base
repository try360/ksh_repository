package kr.co.kt.common;

import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.net.URLEncoder;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Component;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.servlet.view.AbstractView;

import kr.co.kt.agwne.dto.AttachVO;
import kr.co.kt.agwne.service.AttachService;
/**
 * agw-ne
 *
 * Copyright ¨Ï 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2010-11-22
 * @ file UserApprValidation.java
 * @ version 1.0
 * @ see
 * @ Copyright ¨Ï 2018 By kt corp. All rights reserved.
 */
@Component
public class DownloadView extends AbstractView {

	private String realFolder = "/data/tomcat8/upload/";
	
	@Inject
	AttachService service;
	
	public DownloadView() {
		setContentType("application/download; charset=utf-8");
	}
 
	@Override
	protected void renderMergedOutputModel(
			  Map<String, Object> model
			, HttpServletRequest request
			, HttpServletResponse response)
			throws Exception {
		int attach_no = (int) model.get("attach_no");
		AttachVO vo = service.selectOne(attach_no);
		String filename = vo.getFilename();
		String filename_n = vo.getFilename_n();
		String filepath = realFolder + vo.getFilepath() + filename_n;
		File file = new File(filepath);
		
		String userAgent = request.getHeader("User-Agent");
		boolean ie = userAgent.indexOf("Trident") > -1 || userAgent.indexOf("MSIE") > -1  ;
		if (ie) {
			filename = URLEncoder.encode(filename, "utf-8");
		} else {
			filename = new String(filename.getBytes("utf-8"), "iso-8859-1");
		}
		
		response.setContentType(getContentType());
		response.setContentLength((int) file.length());
		response.setHeader("Content-Disposition", "attachment; filename=\""+ filename +"\";");
		response.setHeader("Content-Transfer-Encoding", "binary");
		
		OutputStream out = response.getOutputStream();
		FileInputStream fis = null;
		
		try {
			fis = new FileInputStream(file);
			FileCopyUtils.copy(fis, out);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (fis != null) {
				try {
					fis.close();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
		out.flush();
	}

}
