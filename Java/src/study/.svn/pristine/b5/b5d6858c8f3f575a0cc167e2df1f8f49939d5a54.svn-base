package kr.co.kt.agwne.dao.impl;

import java.util.HashMap;
import java.util.List;

import javax.inject.Inject;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Repository;

import kr.co.kt.agwne.dao.FacilityDAO;
import kr.co.kt.agwne.dto.MacExcelVO;
import kr.co.kt.agwne.dto.MacOneVO;
import kr.co.kt.agwne.dto.MacVO;

@Repository
public class FacilityDAOImpl implements FacilityDAO {

	@Inject
	private SqlSession session;
	
	private static final String Namespace = "kr.co.kt.agwne.facilityMapper";
	
	@Override
	public Object selectMacAll(HashMap<String, Object> map) {
		return session.selectList(Namespace +".selectMacAll", map);
	}

	@Override
	public Object selectMacCnt(HashMap<String, Object> map) {
		return session.selectOne(Namespace +".selectMacCnt", map);
	}

	@Override
	public int selectDuplicate(String agw_mac) {
		return session.selectOne(Namespace +".selectDuplicate", agw_mac);
	}

	@Override
	public void insertOrUpdateExcelUpload(MacVO vo) {
		session.insert(Namespace +".insertOrUpdateExcelUpload", vo);
	}

	@Override
	public void updateExcelFile(MacExcelVO excelVO) {
		session.update(Namespace +".updateExcelFile", excelVO);
	}

	@Override
	public MacExcelVO selectMacExcel(int excel_no) {
		return session.selectOne(Namespace +".selectMacExcel", excel_no);
	}
	
	@Override
	public void insertOrUpdateMac(MacOneVO vo) {
		session.insert(Namespace + ".insertOrUpdateMac", vo);
	}

	@Override
	public int excelUploadChk(String agw_mac) {
		return session.selectOne(Namespace + ".excelUploadChk",agw_mac);
	}

	@Override
	public void macDelete(HashMap<String, Object> map) {
		session.update(Namespace + ".macDelete", map);
	}
	
	@Override
	public MacOneVO macOneInfo(int mac_no) {
		return session.selectOne(Namespace + ".macOneInfo", mac_no);
	}

	@Override
	public int macUploadChk(String agw_mac) {
		return session.selectOne(Namespace + ".macUploadChk", agw_mac);
	}

	@Override
	public void updateOK(MacOneVO vo) {
		session.update(Namespace + ".updateOK", vo);		
	}

}
