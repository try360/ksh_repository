package kr.co.kt.agwne.web;


import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.MailSender;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;


import kr.co.kt.agwne.dto.EmailVO;
import kr.co.kt.agwne.service.CommonService;
import kr.co.kt.agwne.validate.UserInfoValidation;
import kr.co.kt.common.EmailSender;
import kr.co.kt.common.ParamValidatChk;
/**
 * agw-ne
 *
 * Copyright ⓒ 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2010-11-22
 * @ file UserApprValidation.java
 * @ version 1.0
 * @ see
 * @ Copyright ⓒ 2018 By kt corp. All rights reserved.
 */
@Controller
@RequestMapping("/**")
public class EmailController {

	private static final Logger logger = LoggerFactory.getLogger(EmailController.class);
	@Inject
	CommonService commService;
	
	@Autowired
	private EmailSender emailSender;
	
	@Autowired
	private UserInfoValidation validatChk;
	
	@RequestMapping("email")
	public String email_test() {
//		EmailVO vo = new EmailVO();
//		String[] receiver = {"김유신", "선덕여왕", "이순신"};
//		String[] cc = {"방탄", "EXO", "INFINITY"};
//		String[] bcc = {"트와이스"};
//		vo.setReceiver(receiver);
//		vo.setReceiverCC(cc);
//		vo.setReceiverBCC(bcc);
//		vo.setSubject("제목입니다");
//		vo.setContent("내용입니다");
//		logger.info(vo.getRTO());
		
//		commService.insertEmail(vo);
		
		return "/email_test";
	}
	
	@RequestMapping(value="/email_sending", method=RequestMethod.POST)
	public String email_sending(@ModelAttribute EmailVO vo) throws Exception {
		logger.info("EmailSender ======= emailSender");
		String[] receiver = vo.getRTO().split(";");
		vo.setReceiver(receiver);
//		vo.setContent(emailSender.getEmailContent01((BusinessVO) service.t_bs_list_view(126)));
		//emailSender.sendEmail(vo);
		
		return "redirect:/email";
	}
	
	@RequestMapping(value = "/email/managerEmail_v", method = { RequestMethod.POST, RequestMethod.GET })
	public String managerEmail_v(Model model
			, @ModelAttribute EmailVO vo
			, HttpServletRequest request
			, HttpServletResponse response) throws Exception {
		
		//수신자 & 제목 & 내용 null체크
		if(vo.getRTO().equals("") || vo.getSubject().equals("") || vo.getContent().equals("")) {
			return "redirect:/manage/managerEmail?msg=no";
		}
		
		//수신자
		String[] rTo = vo.getRTO().split(";");
		for(int i=0; i<rTo.length; i++){
			if (rTo[i].indexOf("<") > 0) {
				int start = rTo[i].indexOf("<")+1;
				int end = rTo[i].indexOf(">");
				rTo[i] = rTo[i].substring(start, end);
			}else {
				//email 유효성 체크
				if(validatChk.pattern("email2", rTo[i])==false) {
					return "redirect:/manage/managerEmail?msg=false";
				}
			}
		}
		vo.setReceiver(rTo);
			
		//참조
		String[] rCC = vo.getRCC().split(";");
		if(!vo.getRCC().equals("")) {			
			for(int i=0; i<rCC.length; i++){
				if (rCC[i].indexOf("<") > 0) {
					int start = rCC[i].indexOf("<")+1;
					int end = rCC[i].indexOf(">");
					rCC[i] = rCC[i].substring(start, end);
				}
				//email 유효성 체크
				if(validatChk.pattern("email2", rCC[i])==false) {
					return "redirect:/manage/managerEmail?msg=false";
				}
			}
			vo.setReceiverCC(rCC);
		}
		
		//숨은참조
		String[] rBCC = vo.getRBCC().split(";");
		if(!vo.getRBCC().equals("")) {
			for(int i=0; i<rBCC.length; i++){
				if (rBCC[i].indexOf("<") > 0) {
					int start = rBCC[i].indexOf("<")+1;
					int end = rBCC[i].indexOf(">");
					rBCC[i] = rBCC[i].substring(start, end);
				}
				//email 유효성 체크
				if(validatChk.pattern("email2", rBCC[i])==false) {
					return "redirect:/manage/managerEmail?msg=false";
				}
			}
			vo.setReceiverBCC(rBCC);
		}
				
		//메일의 제목과 내용으로 html
		vo.setContent(vo.getContent().replaceAll("&lt;", "<").replaceAll("&gt;",">"));
		vo.setContent(emailSender.getManagerEmail(vo));
		
		//메일보내기
		emailSender.sendEmail(vo);
		
		return "redirect:/manage/managerEmail?msg=ok";
	}

}
