package kr.co.kt.agwne.dao.impl;

import java.util.HashMap;
import java.util.List;

import javax.inject.Inject;

import org.apache.ibatis.session.SqlSession;
import org.springframework.stereotype.Repository;

import kr.co.kt.agwne.dao.CostDAO;
import kr.co.kt.agwne.dto.CostVO;
 

/**
 * agw-ne
 *
 * Copyright ¨Ï 2018 kt corp. All rights reserved.
 *
 * This is a proprietary software of kt corp, and you may not use this file except in
 * compliance with license agreement with kt corp. Any redistribution or use of this
 * software, with or without modification shall be strictly prohibited without prior written
 * approval of kt corp, and the copyright notice above does not evidence any actual or
 * intended publication of such software.
 * 
 * @ author kt
 * @ since 2010-11-22
 * @ file UserApprValidation.java
 * @ version 1.0
 * @ see
 * @ Copyright ¨Ï 2018 By kt corp. All rights reserved.
 */
@Repository
public class CostDAOImpl implements CostDAO {

    @Inject
    private SqlSession sqlSession;

    private static final String Namespace = "kr.co.kt.agwne.costMapper";

    
    @Override
    public Object cost_reg(CostVO costVO) throws Exception{
        return sqlSession.insert(Namespace + ".cost_reg", costVO);  
    }


	@Override
	public List<Object> selectAll(HashMap<String, String> map) {
		return sqlSession.selectList(Namespace +".selectAll", map);
	}


	@Override
	public List<Object> selectModel(String agw_cd) {
		return sqlSession.selectList(Namespace +".selectModel", agw_cd);
	}


	@Override
	public List<Object> selectModelAll(String agw_cd) {
		return sqlSession.selectList(Namespace +".selectModelAll", agw_cd);
	}


	@Override
	public void delete(CostVO costVO) {
		sqlSession.update(Namespace +".delete", costVO);
	}


	@Override
	public void update(CostVO costVO) {
		sqlSession.update(Namespace +".update", costVO);
	}
    
}
